{"version":3,"sources":["components/PokemonList.js","components/FilterNamePoke.js","App.js","services/pokeServices.js","index.js"],"names":["PokemonList","filterPoke","this","props","react_default","a","createElement","className","map","item","key","src","pokeImg","alt","pokeName","pokeId","type","index","Component","FilterNamePoke","name","htmlFor","onKeyUp","id","placeholder","propType","PropTypes","func","isRequired","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","myPokemon","fieldName","getFieldName","bind","assertThisInitialized","getPokemon","idNumber","localStorage","setItem","JSON","stringify","getItem","savePokemon","parse","setState","_this2","fetch","then","response","json","poke","pokeUrl","results","objectSpread","url","i","length","pokeType","types","push","sprites","front_default","resultInfo","sort","b","saveLocalStorage","e","fieldNamePoke","currentTarget","value","_this3","filter","toUpperCase","includes","filterPokemon","components_FilterNamePoke","components_PokemonList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9d63ec65.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass PokemonList extends Component {\n  \n  render() {\n   const {filterPoke} = this.props\n      return (\n        <section className=\"main__list\">\n          <ul className=\"poke__list\">\n            {filterPoke.map((item,key) => {\n              return (\n                <li key={key} className=\"poke__list--item\">\n                  <div className=\"item__image\">\n                    <img src={item.pokeImg} alt={item.pokeName} className=\"image__style\" />\n                    <p className=\"id__text\">ID / {item.pokeId}</p>\n                  </div>\n                  <div className=\"item__name\">\n                    <h2 className=\"name__title\">{item.pokeName}</h2>\n                  </div>\n                  <div className=\"item__types\">\n                    {item.type.map((type, index) => {\n                      return (\n                          <p key={index} className=\"types__text\">{type}</p>\n                      );\n                    })}\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n      );\n    };\n  };\n  PokemonList.propTypes = {\n    filterPokemons: PropTypes.array\n}\n\n\nexport default PokemonList;","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass FilterNamePoke extends Component {\n  \n  render() {\n    const {name} = this.props;\n      return (\n        <section className=\"main__filter\">\n          <label htmlFor=\"pokename\">\n              <input onKeyUp={name} type=\"text\" id=\"pokename\" name=\"pokename\" placeholder=\"Busca a tu pokemon favorito\" className=\"poke__filter\" ></input>\n            </label>\n        </section>\n      );\n    };\n  };\nFilterNamePoke.propType ={\n  name: PropTypes.func.isRequired\n};\n\n\nexport default FilterNamePoke;","import React, { Component } from 'react';\nimport {getApiPokemon} from './services/pokeServices';\nimport PokemonList from './components/PokemonList';\nimport FilterNamePoke from './components/FilterNamePoke';\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      myPokemon: [],\n      fieldName: ''\n    }\n    this.getFieldName = this.getFieldName.bind(this);\n  }\n\n  componentDidMount(){\n    this.getPokemon();\n  }\n\n  saveLocalStorage(idNumber, myPokemon){\n    localStorage.setItem(myPokemon,JSON.stringify(idNumber))\n  }\n  \n  getSavedLocalStorage(){\n    if(localStorage.getItem('poke') !== null){\n      const savePokemon = JSON.parse(localStorage.getItem('poke'));\n      this.setState({\n        myPokemon: savePokemon,\n      })\n    } else {\n      this.getPokemon();\n    }\n  }\n\n  getPokemon() {\n    getApiPokemon()\n    .then(poke => {\n      const addId = poke.results.map((item,index) => {\n        return {...item,id:index}\n      });\n      const pokeUrl = addId.map(item => {\n        return item.url\n      });\n      \n      for (let i = 0; i < pokeUrl.length; i++){\n        fetch(pokeUrl[i])\n          .then(response => response.json())\n          .then(pokeUrl => { \n            const pokeType = []; \n              for (let i = 0; i < pokeUrl.types.length; i++) {\n                pokeType.push(pokeUrl.types[i].type.name);\n              }\n            let poke = {\n              pokeName: pokeUrl.name,\n              pokeId:pokeUrl.id,\n              pokeImg: pokeUrl.sprites.front_default,\n              type: pokeType\n            };\n            const resultInfo = this.state.myPokemon;\n            resultInfo.push(poke);\n            this.setState({\n              myPokemon: resultInfo.sort(((a, b) => a.pokeId - b.pokeId))\n          });\n          this.saveLocalStorage(this.state.myPokemon,'myPokemon');\n        })\n      }\n    })\n  }\n\n  getFieldName(e){\n    const fieldNamePoke = e.currentTarget.value;\n     this.setState({\n       fieldName: fieldNamePoke \n     });\n  };\n\n  filterPokemon(){\n    const filterName = this.state.myPokemon\n      .filter(item => {\n      const name = item.pokeName;\n      return (name.toUpperCase().includes(this.state.fieldName.toUpperCase())) ? true : false;\n    })\n    return filterName;\n  };\n\n  render() {\n    const filterPoke = this.filterPokemon();\n    return (\n      <div className=\"page__wrapper\">\n        <div className=\"shapes__content\">\n          <div className=\"triangle__left\"></div>\n          <div className=\"triangle__righ\"></div>\n        </div>\n        <header className=\"header__content\">\n          <h1 className=\"header__title\">POKEDEX</h1>\n        </header>\n        <main className=\"main__content\">\n          <FilterNamePoke name={this.getFieldName}/>\n          <PokemonList filterPoke={filterPoke}/> \n        </main>\n        <footer>\n        <div className=\"shapes__content\">\n          <div className=\"circle__left\"></div>\n          <div className=\"circle__righ\"></div>\n        </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = `https://pokeapi.co/api/v2/pokemon/?offset=0&limit=25`;\n\nconst getApiPokemon = () => fetch(ENDPOINT).then(response => response.json());\n\nexport {getApiPokemon};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}